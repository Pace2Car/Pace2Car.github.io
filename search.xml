<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Elasticsearch学习笔记]]></title>
    <url>%2F2018%2F11%2F23%2FElasticsearch%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[ElasticSearch学习笔记基本概念（搬运官方文档）慢慢更新个人总结吧…入门Elasticsearch是一个高度可扩展的开源全文搜索和分析引擎。它允许您快速，近实时地存储，搜索和分析大量数据。它通常用作底层引擎/技术，为具有复杂搜索功能和要求的应用程序提供支持。 近实时（NRT）Elasticsearch是一个近实时搜索平台。这意味着从索引文档到可搜索文档的时间有一点延迟（通常是一秒）。 集群集群是一个或多个节点（服务器）的集合，它们共同保存您的整个数据，并提供跨所有节点的联合索引和搜索功能。群集由唯一名称标识，默认情况下为“elasticsearch”。此名称很重要，因为如果节点设置为按名称加入群集，则该节点只能是群集的一部分。 确保不要在不同的环境中重用相同的群集名称，否则最终会导致节点加入错误的群集。例如，您可以使用logging-dev，logging-stage以及logging-prod 用于开发，登台和生产集群。 请注意，如果群集中只有一个节点，那么它是完全正常的。此外，您还可以拥有多个独立的集群，每个集群都有自己唯一的集群名称。 节点节点是作为群集一部分的单个服务器，存储数据并参与群集的索引和搜索功能。就像集群一样，节点由名称标识，默认情况下，该名称是在启动时分配给节点的随机通用唯一标识符（UUID）。如果不需要默认值，可以定义所需的任何节点名称。此名称对于管理目的非常重要，您可以在其中识别网络中哪些服务器与Elasticsearch集群中的哪些节点相对应。 可以将节点配置为按群集名称加入特定群集。默认情况下，每个节点都设置为加入一个名为cluster的集群elasticsearch，这意味着如果您在网络上启动了许多节点并且假设它们可以相互发现 - 它们将自动形成并加入一个名为的集群elasticsearch。 在单个群集中，您可以拥有任意数量的节点。此外，如果您的网络上当前没有其他Elasticsearch节点正在运行，则默认情况下，启动单个节点将形成一个名为的新单节点集群elasticsearch。 索引索引是具有某些类似特征的文档集合。例如，您可以拥有客户数据的索引，产品目录的另一个索引以及订单数据的另一个索引。索引由名称标识（必须全部小写），此名称用于在对其中的文档执行索引，搜索，更新和删除操作时引用索引。 在单个群集中，您可以根据需要定义任意数量的索引。 文档（document）文档是可以编制索引的基本信息单元。例如，您可以为单个客户提供文档，为单个产品提供另一个文档，为单个订单提供另一个文档。该文档以JSON（JavaScript Object Notation）表示，JSON是一种普遍存在的互联网数据交换格式。 在索引/类型中，您可以根据需要存储任意数量的文档。请注意，尽管文档实际上驻留在索引中，但实际上必须将文档编入索引/分配给索引中的类型。 分片和副本索引可能存储大量可能超过单个节点的硬件限制的数据。例如，占用1TB磁盘空间的十亿个文档的单个索引可能不适合单个节点的磁盘，或者可能太慢而无法单独从单个节点提供搜索请求。 为了解决这个问题，Elasticsearch提供了将索引细分为多个称为分片的功能。创建索引时，只需定义所需的分片数即可。每个分片本身都是一个功能齐全且独立的“索引”，可以托管在集群中的任何节点上。 分片很重要，主要有两个原因： 它允许您水平拆分/缩放内容量 它允许您跨分片（可能在多个节点上）分布和并行化操作，从而提高性能/吞吐量分片的分布方式以及如何将其文档聚合回搜索请求的机制完全由Elasticsearch管理，对用户而言是透明的。 在可以随时发生故障的网络/云环境中，非常有用，强烈建议使用故障转移机制，以防分片/节点以某种方式脱机或因任何原因消失。为此，Elasticsearch允许您将索引的分片的一个或多个副本制作成所谓的副本分片或简称副本。 副本很重要，主要有两个原因： 它在分片/节点发生故障时提供高可用性。因此，请务必注意，副本分片永远不会在与从中复制的原始/主分片相同的节点上分配。 它允许您扩展搜索量/吞吐量，因为可以在所有副本上并行执行搜索。总而言之，每个索引可以拆分为多个分片。索引也可以复制为零（表示没有副本）或更多次。复制后，每个索引都将具有主分片（从中复制的原始分片）和副本分片（主分片的副本）。 可以在创建索引时为每个索引定义分片和副本的数量。创建索引后，您还可以随时动态更改副本数。您可以使用_shrink和_splitAPI 更改现有索引的分片数，但这不是一项简单的任务，并且预先计划正确数量的分片是最佳方法。 默认情况下，Elasticsearch中的每个索引都分配了5个主分片和1个副本，这意味着如果群集中至少有两个节点，则索引将包含5个主分片和另外5个副本分片（1个完整副本），总计为每个索引10个分片。 ### ElasticSearch的安装和配置安装及改配置参考这个 启动权限这个是真的坑，首先es默认不允许root启动，而其中bin文件夹又是admin.root所属。。。 解决：先创建一个新用户，将ElasticSearch的安装目录及其子目录改为另外一个非root账户，如：12sudo chown -R esuser elasticsearch-6.5.0sudo chgrp -R esgroup elasticsearch-6.5.0 中文分词器ik注意：中文分词器ik的版本必须与es版本保持一致（完全一致），一般用master版本编译打包出来的。12eg:java.lang.IllegalArgumentException: Plugin [analysis-ik] was built for Elasticsearch version 6.5.0 but version 6.5.1 is running 启动esroot启动/elasticsearch-6.5.0/bin/elasticsearch,显示started启动成功。 关闭防火墙以方便使用windows客户端访问1234systemctl stop firewalld.service在windows浏览器地址栏键入：http://es服务器ip:9200 API学习，用kibana实现增删改查安装kibana略··· 改配置麻烦，但网上大把资料 启动kibanaroot启动/kibana/bin/kibana,显示Ready启动成功。1[root@localhost bin]# ./kibana 关闭防火墙以方便使用windows客户端访问1234systemctl stop firewalld.service在windows浏览器地址栏键入：http://kibana服务器ip:5601 在windows连接到kibana后打开Dev Tools开发者工具，在里面键入测试代码：search&#123; &quot;query&quot;: &#123; &quot;match_all&quot;: &#123;&#125; &#125;&#125;#添加PUT /lib/&#123; &quot;index&quot;:&#123; &quot;number_of_shards&quot;: 3, &quot;number_of_replicas&quot;: 0 &#125;&#125;PUT lib2#查询GET lib/_settingsGET lib2/_settingsGET _allPUT lib/user/1&#123; &quot;name&quot;: &quot;chenjiahao&quot;, &quot;age&quot;: 20, &quot;words&quot;:&quot;i like es&quot;&#125;PUT lib/user/2&#123; &quot;name&quot;: &quot;chenjiahao2&quot;, &quot;age&quot;: 21, &quot;words&quot;:&quot;i like es&quot;&#125;PUT lib/user/3&#123; &quot;name&quot;: &quot;chenjiahao3&quot;, &quot;age&quot;: 22, &quot;words&quot;:&quot;i like es&quot;&#125;GET lib/user/1POST lib/user/&#123; &quot;name&quot;: &quot;chenjiahao2&quot;, &quot;age&quot;: 20, &quot;words&quot;:&quot;i like es&quot;&#125;GET lib/user/LFpwOWcB6QBY5llGnUgCGET /lib/user/1?_source=age#更新PUT /lib/user/1&#123; &quot;name&quot;: &quot;chenjiahao&quot;, &quot;age&quot;: 20, &quot;words&quot;:&quot;i like es and kibana&quot;&#125;POST /lib/user/1/_update&#123; &quot;doc&quot;:&#123; &quot;age&quot;: 23, &quot;gender&quot;: &quot;m&quot; &#125;&#125;#删除DELETE /lib/user/1DELETE lib2#MultGet批量获取GET /_mget&#123; &quot;docs&quot;:[ &#123; &quot;_index&quot;: &quot;lib&quot;, &quot;_type&quot;: &quot;user&quot;, &quot;_id&quot;:1 &#125;, &#123; &quot;_index&quot;: &quot;lib&quot;, &quot;_type&quot;: &quot;user&quot;, &quot;_id&quot;:2 &#125;, &#123; &quot;_index&quot;: &quot;lib&quot;, &quot;_type&quot;: &quot;user&quot;, &quot;_id&quot;:3 &#125; ]&#125;GET /_mget&#123; &quot;docs&quot;:[ &#123; &quot;_index&quot;: &quot;lib&quot;, &quot;_type&quot;: &quot;user&quot;, &quot;_id&quot;:1, &quot;_source&quot;: &quot;words&quot; &#125;, &#123; &quot;_index&quot;: &quot;lib&quot;, &quot;_type&quot;: &quot;user&quot;, &quot;_id&quot;:2, &quot;_source&quot;: [&quot;words&quot;,&quot;age&quot;] &#125;, &#123; &quot;_index&quot;: &quot;lib&quot;, &quot;_type&quot;: &quot;user&quot;, &quot;_id&quot;:3, &quot;_source&quot;: [&quot;name&quot;,&quot;age&quot;,&quot;words&quot;] &#125; ]&#125;GET lib/user/_mget&#123; &quot;docs&quot;:[ &#123; &quot;_id&quot;:1, &quot;_source&quot;: &quot;words&quot; &#125;, &#123; &quot;_id&quot;:2, &quot;_source&quot;: [&quot;words&quot;,&quot;age&quot;] &#125;, &#123; &quot;_id&quot;:3, &quot;_source&quot;: [&quot;name&quot;,&quot;age&quot;,&quot;words&quot;] &#125; ]&#125;GET lib/user/_mget&#123; &quot;ids&quot;: [&quot;1&quot;,&quot;2&quot;,&quot;3&quot;]&#125;#Bulk批量操作#&#123;action:&#123;metadata&#125;&#125;\n#&#123;requestbody&#125;\n#批量添加POST /lib2/books/_bulk&#123;&quot;index&quot;:&#123;&quot;_id&quot;:1&#125;&#125;&#123;&quot;title&quot;:&quot;java&quot;,&quot;price&quot;:33&#125;&#123;&quot;index&quot;:&#123;&quot;_id&quot;:2&#125;&#125;&#123;&quot;title&quot;:&quot;c&quot;,&quot;price&quot;:44&#125;&#123;&quot;index&quot;:&#123;&quot;_id&quot;:3&#125;&#125;&#123;&quot;title&quot;:&quot;c++&quot;,&quot;price&quot;:55&#125;&#123;&quot;index&quot;:&#123;&quot;_id&quot;:4&#125;&#125;&#123;&quot;title&quot;:&quot;python&quot;,&quot;price&quot;:66&#125;GET lib2/books/_mget&#123; &quot;ids&quot;: [&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;]&#125;#批量多操作，数据量不能过大POST /lib2/books/_bulk&#123;&quot;delete&quot;:&#123;&quot;_index&quot;:&quot;lib2&quot;,&quot;_type&quot;:&quot;books&quot;,&quot;_id&quot;:4&#125;&#125;&#123;&quot;create&quot;:&#123;&quot;_index&quot;:&quot;tt&quot;,&quot;_type&quot;:&quot;ttt&quot;,&quot;_id&quot;:100&#125;&#125;&#123;&quot;name&quot;:&quot;aaa&quot;&#125;&#123;&quot;index&quot;:&#123;&quot;_index&quot;:&quot;tt&quot;,&quot;_type&quot;:&quot;ttt&quot;&#125;&#125;&#123;&quot;name&quot;:&quot;bbb&quot;&#125;&#123;&quot;update&quot;:&#123;&quot;_index&quot;:&quot;lib2&quot;,&quot;_type&quot;:&quot;books&quot;,&quot;_id&quot;:3&#125;&#125;&#123;&quot;doc&quot;:&#123;&quot;price&quot;:&quot;99&quot;&#125;&#125;GET tt/ttt/_mget&#123; &quot;ids&quot;: [&quot;100&quot;]&#125;GET tt/ttt/_search#版本控制POST /lib/user/_bulk&#123;&quot;index&quot;:&#123;&quot;_id&quot;:3&#125;&#125;&#123;&quot;name&quot;:&quot;zhangsan&quot;,&quot;age&quot;:33&#125;&#123;&quot;index&quot;:&#123;&quot;_id&quot;:4&#125;&#125;&#123;&quot;name&quot;:&quot;lisi&quot;,&quot;age&quot;:44&#125;POST /lib/user/_bulk&#123;&quot;update&quot;:&#123;&quot;_index&quot;:&quot;lib&quot;,&quot;_type&quot;:&quot;user&quot;,&quot;_id&quot;:3&#125;&#125;&#123;&quot;doc&quot;:&#123;&quot;age&quot;:&quot;19&quot;&#125;&#125;&#123;&quot;update&quot;:&#123;&quot;_index&quot;:&quot;lib&quot;,&quot;_type&quot;:&quot;user&quot;,&quot;_id&quot;:4&#125;&#125;&#123;&quot;doc&quot;:&#123;&quot;age&quot;:&quot;9&quot;&#125;&#125;&#123;&quot;update&quot;:&#123;&quot;_index&quot;:&quot;lib&quot;,&quot;_type&quot;:&quot;user&quot;,&quot;_id&quot;:3&#125;&#125;&#123;&quot;doc&quot;:&#123;&quot;age&quot;:&quot;29&quot;&#125;&#125;PUT /lib/user/4?version=3&#123; &quot;name&quot;: &quot;chenjiahao&quot;, &quot;age&quot;: 20, &quot;words&quot;:&quot;i like es and kibana&quot;&#125;PUT /lib/user/4?version=6&amp;version_type=external&#123; &quot;name&quot;: &quot;chenjiahao&quot;, &quot;age&quot;: 25, &quot;words&quot;:&quot;i like es and kibana&quot;&#125;#mapping的基本概念GET lib/user/_mappingPOST /myindex/article/_bulk&#123;&quot;index&quot;:&#123;&quot;_id&quot;:1&#125;&#125;&#123;&quot;title&quot;:&quot;es&quot;,&quot;post_date&quot;:&quot;2018-11-22&quot;,&quot;public&quot;:true,&quot;content&quot;:&quot;a article for es&quot;&#125;&#123;&quot;index&quot;:&#123;&quot;_id&quot;:2&#125;&#125;&#123;&quot;title&quot;:&quot;kibana&quot;,&quot;post_date&quot;:&quot;2018-11-23&quot;,&quot;public&quot;:false,&quot;content&quot;:&quot;a article for kibana学习&quot;&#125;&#123;&quot;index&quot;:&#123;&quot;_id&quot;:3&#125;&#125;&#123;&quot;title&quot;:&quot;logstash&quot;,&quot;post_date&quot;:&quot;2018-11-24&quot;,&quot;public&quot;:false,&quot;content&quot;:&quot;a article for logstash学习&quot;&#125;&#123;&quot;index&quot;:&#123;&quot;_id&quot;:4&#125;&#125;&#123;&quot;title&quot;:&quot;ik&quot;,&quot;post_date&quot;:&quot;2018-11-25&quot;,&quot;public&quot;:true,&quot;content&quot;:&quot;a article for ik&quot;&#125;GET myindex/article/_mappingGET /myindex/article/_search?q=public:trueGET /myindex/article/_search?q=post_date:2018-11-22GET /myindex/article/_search?q=content:kibana#Object数据类型PUT /lib5&#123; &quot;index&quot;:&#123; &quot;number_of_shards&quot;: 3, &quot;number_of_replicas&quot;: 0 &#125;&#125;PUT lib5/person/1&#123; &quot;name&quot;: &quot;chenjiahao&quot;, &quot;age&quot;: 20, &quot;birth&quot;:&quot;2015-01-01&quot;, &quot;address&quot;:&#123; &quot;country&quot;:&quot;china&quot;, &quot;province&quot;:&quot;sichuan&quot;, &quot;city&quot;:&quot;chengdu&quot; &#125;&#125;GET lib5/person/_mappingGET lib5/_settings#手动创建mappingPUT /lib6&#123; &quot;index&quot;:&#123; &quot;number_of_shards&quot;: 3, &quot;number_of_replicas&quot;: 0 &#125; , &quot;mappings&quot;: &#123; &quot;book&quot;:&#123; &quot;properties&quot;:&#123; &quot;title&quot;:&#123;&quot;type&quot;:&quot;text&quot;,&quot;analyzer&quot;:&quot;standard&quot;&#125;, &quot;content&quot;:&#123;&quot;type&quot;:&quot;text&quot;,&quot;analyzer&quot;:&quot;standard&quot;&#125;, &quot;pub_date&quot;:&#123;&quot;type&quot;:&quot;date&quot;,&quot;index&quot;:false&#125;, &quot;price&quot;:&#123;&quot;type&quot;:&quot;double&quot;&#125;, &quot;number&quot;:&#123;&quot;type&quot;:&quot;integer&quot;&#125; &#125; &#125; &#125;&#125;GET lib6/book/_mapping#基本查询PUT /lib3&#123; &quot;index&quot;:&#123; &quot;number_of_shards&quot;: 3, &quot;number_of_replicas&quot;: 0 &#125; , &quot;mappings&quot;: &#123; &quot;user&quot;:&#123; &quot;properties&quot;:&#123; &quot;name&quot;:&#123;&quot;type&quot;:&quot;text&quot;&#125;, &quot;address&quot;:&#123;&quot;type&quot;:&quot;text&quot;&#125;, &quot;age&quot;:&#123;&quot;type&quot;:&quot;integer&quot;&#125;, &quot;interests&quot;:&#123;&quot;type&quot;:&quot;text&quot;&#125;, &quot;birthday&quot;:&#123;&quot;type&quot;:&quot;date&quot;&#125; &#125; &#125; &#125;&#125;PUT /lib3/user/1&#123; &quot;name&quot;: &quot;chenjiahao&quot;, &quot;age&quot;: 20, &quot;address&quot;:&quot;sichuan,chengdu&quot;, &quot;interests&quot;:&quot;pashan,lanqiu&quot;, &quot;birthday&quot;:&quot;2012-01-01&quot;&#125;PUT /lib3/user/2&#123; &quot;name&quot;: &quot;wangwu&quot;, &quot;age&quot;: 25, &quot;address&quot;:&quot;shangxi,xian&quot;, &quot;interests&quot;:&quot;pashan,lanqiu&quot;, &quot;birthday&quot;:&quot;2012-01-01&quot;&#125;PUT /lib3/user/3&#123; &quot;name&quot;: &quot;zhaosi&quot;, &quot;age&quot;: 30, &quot;address&quot;:&quot;beijing&quot;, &quot;interests&quot;:&quot;lanqiu,lvyou&quot;, &quot;birthday&quot;:&quot;1990-01-01&quot;&#125;PUT /lib3/user/4&#123; &quot;name&quot;: &quot;zhanger&quot;, &quot;age&quot;: 50, &quot;address&quot;:&quot;shanghai&quot;, &quot;interests&quot;:&quot;youyong,lvyou&quot;, &quot;birthday&quot;:&quot;2012-01-01&quot;&#125;#max_score:和当前搜索相关度的匹配值GET /lib3/user/_search?q=interests:lanqiu&amp;sort=age:desc#term查询(确切查询，跳过分词器)GET /lib3/user/_search&#123; &quot;query&quot;: &#123; &quot;term&quot;: &#123; &quot;name&quot;: &quot;zhaosi&quot; &#125; &#125;&#125;#多个termsGET /lib3/user/_search&#123; &quot;query&quot;: &#123; &quot;terms&quot;: &#123; &quot;interests&quot;: [&quot;lvyou&quot;,&quot;lanqiu&quot;] &#125; &#125;&#125;#控制显示个数GET /lib3/user/_search&#123; &quot;from&quot;: 0, &quot;size&quot;: 2, &quot;query&quot;: &#123; &quot;terms&quot;: &#123; &quot;interests&quot;: [&quot;lvyou&quot;,&quot;lanqiu&quot;] &#125; &#125;&#125;#显示versionGET /lib3/user/_search&#123; &quot;version&quot;: true, &quot;query&quot;: &#123; &quot;terms&quot;: &#123; &quot;interests&quot;: [&quot;lvyou&quot;,&quot;lanqiu&quot;] &#125; &#125;&#125;#match查询(分词查询，相对模糊)#分词匹配GET /lib3/user/_search&#123; &quot;query&quot;: &#123; &quot;match&quot;: &#123; &quot;name&quot;: &quot;zhaosi chenjiahao&quot; &#125; &#125;&#125;#分词匹配GET /lib3/user/_search&#123; &quot;query&quot;: &#123; &quot;match&quot;: &#123; &quot;interests&quot;: &quot;lvyou,youyong&quot; &#125; &#125;&#125;#单个匹配matchGET /lib3/user/_search&#123; &quot;query&quot;: &#123; &quot;match&quot;: &#123; &quot;age&quot;: 20 &#125; &#125;&#125;#匹配全部match_allGET /lib3/user/_search&#123; &quot;query&quot;: &#123; &quot;match_all&quot;:&#123;&#125; &#125;&#125;#多个匹配multi_matchGET /lib3/user/_search&#123; &quot;query&quot;: &#123; &quot;multi_match&quot;:&#123; &quot;query&quot;: &quot;youyong wangwu&quot;, &quot;fields&quot;: [&quot;interests&quot;,&quot;name&quot;] &#125; &#125;&#125;#短语匹配match_phraseGET /lib3/user/_search&#123; &quot;query&quot;: &#123; &quot;match_phrase&quot;:&#123; &quot;address&quot;: &quot;sichuan,chengdu&quot; &#125; &#125;&#125;#包含查询includes/excludesGET /lib3/user/_search&#123; &quot;query&quot;: &#123; &quot;match_all&quot;:&#123;&#125; &#125;, &quot;_source&quot;: &#123; &quot;includes&quot;: [&quot;name&quot;,&quot;address&quot;], &quot;excludes&quot;: [&quot;age&quot;,&quot;birthday&quot;] &#125;&#125;# * 为通配符GET /lib3/user/_search&#123; &quot;_source&quot;: &#123; &quot;includes&quot;: &quot;addr*&quot;, &quot;excludes&quot;: [&quot;age&quot;,&quot;bir*&quot;] &#125;, &quot;query&quot;: &#123; &quot;match_all&quot;:&#123;&#125; &#125;&#125;#排序orderGET /lib3/user/_search&#123; &quot;query&quot;: &#123; &quot;match_all&quot;:&#123;&#125; &#125;, &quot;sort&quot;: [ &#123; &quot;age&quot;:&#123; &quot;order&quot;:&quot;desc&quot; &#125; &#125;, &#123; &quot;birthday&quot;: &#123; &quot;order&quot;: &quot;asc&quot; &#125; &#125; ]&#125;#前缀匹配match_phrase_prefixGET /lib3/user/_search&#123; &quot;query&quot;: &#123; &quot;match_phrase_prefix&quot;: &#123; &quot;name&quot;: &#123; &quot;query&quot;: &quot;zh&quot; &#125; &#125; &#125;&#125;#范围查询rangeGET /lib3/user/_search&#123; &quot;query&quot;: &#123; &quot;range&quot;: &#123; &quot;age&quot;: &#123; &quot;from&quot;: 20, &quot;to&quot;: 40 &#125; &#125; &#125;&#125;#包含上/下界GET /lib3/user/_search&#123; &quot;query&quot;: &#123; &quot;range&quot;: &#123; &quot;age&quot;: &#123; &quot;from&quot;: 20, &quot;to&quot;: 40, &quot;include_lower&quot;:false, &quot;include_upper&quot;:true &#125; &#125; &#125;&#125;#wildcard查询(使用通配符)# * 匹配多个GET /lib3/user/_search&#123; &quot;query&quot;: &#123; &quot;wildcard&quot;: &#123; &quot;name&quot;: &#123; &quot;value&quot;: &quot;chen*&quot; &#125; &#125; &#125;&#125;# ? 匹配一个GET /lib3/user/_search&#123; &quot;query&quot;: &#123; &quot;wildcard&quot;: &#123; &quot;name&quot;: &quot;wan??u&quot; &#125; &#125;&#125;#fuzzy模糊查询GET /lib3/user/_search&#123; &quot;query&quot;: &#123; &quot;fuzzy&quot;: &#123; &quot;name&quot;: &quot;chengjiahao&quot; &#125; &#125;&#125;#highlight高亮GET /lib3/user/_search&#123; &quot;query&quot;: &#123; &quot;fuzzy&quot;: &#123; &quot;name&quot;: &quot;chengjiahao&quot; &#125; &#125;, &quot;highlight&quot;: &#123; &quot;fields&quot;: &#123; &quot;name&quot;: &#123;&#125; &#125; &#125;&#125;#中文查询PUT /lib7&#123; &quot;index&quot;:&#123; &quot;number_of_shards&quot;: 3, &quot;number_of_replicas&quot;: 0 &#125; , &quot;mappings&quot;: &#123; &quot;user&quot;:&#123; &quot;properties&quot;:&#123; &quot;name&quot;:&#123;&quot;type&quot;:&quot;text&quot;,&quot;analyzer&quot;:&quot;ik_max_word&quot;&#125;, &quot;address&quot;:&#123;&quot;type&quot;:&quot;text&quot;,&quot;analyzer&quot;:&quot;ik_max_word&quot;&#125;, &quot;age&quot;:&#123;&quot;type&quot;:&quot;integer&quot;&#125;, &quot;interests&quot;:&#123;&quot;type&quot;:&quot;text&quot;,&quot;analyzer&quot;:&quot;ik_max_word&quot;&#125;, &quot;birthday&quot;:&#123;&quot;type&quot;:&quot;date&quot;&#125; &#125; &#125; &#125;&#125;#Filter查询#filter不计算相关性，并且有缓存，所以速度快于queryPOST /lib4/items/_bulk&#123;&quot;index&quot;: &#123;&quot;_id&quot;:1&#125;&#125;&#123;&quot;price&quot;:40,&quot;itemID&quot;:&quot;ID100123&quot;&#125;&#123;&quot;index&quot;: &#123;&quot;_id&quot;:2&#125;&#125;&#123;&quot;price&quot;:55,&quot;itemID&quot;:&quot;ID100124&quot;&#125;&#123;&quot;index&quot;: &#123;&quot;_id&quot;:3&#125;&#125;&#123;&quot;price&quot;:66,&quot;itemID&quot;:&quot;ID100125&quot;&#125;&#123;&quot;index&quot;: &#123;&quot;_id&quot;:4&#125;&#125;&#123;&quot;price&quot;:null,&quot;itemID&quot;:&quot;ID100126&quot;&#125;&#123;&quot;index&quot;: &#123;&quot;_id&quot;:5&#125;&#125;&#123;&quot;price&quot;:11,&quot;itemID&quot;:&quot;ID100127&quot;&#125;GET /lib4/items/_search&#123; &quot;query&quot;: &#123; &quot;bool&quot;: &#123; &quot;filter&quot;:&#123; &quot;term&quot;:&#123; &quot;price&quot;:40 &#125; &#125; &#125; &#125;&#125;GET /lib4/items/_search&#123; &quot;query&quot;: &#123; &quot;bool&quot;: &#123; &quot;filter&quot;:&#123; &quot;terms&quot;:&#123; &quot;price&quot;:[40,55] &#125; &#125; &#125; &#125;&#125;GET /lib4/items/_search&#123; &quot;query&quot;: &#123; &quot;bool&quot;: &#123; &quot;filter&quot;:&#123; &quot;term&quot;:&#123; &quot;itemID&quot;: &quot;id100123&quot; &#125; &#125; &#125; &#125;&#125;GET /lib4/_mapping#bool过滤查询GET /lib4/items/_search&#123; &quot;query&quot;: &#123; &quot;bool&quot;: &#123; &quot;should&quot;:[ &#123; &quot;term&quot;:&#123; &quot;itemID&quot;: &quot;id100123&quot; &#125; &#125;, &#123; &quot;term&quot;:&#123; &quot;price&quot;: &quot;55&quot; &#125; &#125; ], &quot;must_not&quot;: [ &#123; &quot;term&quot;: &#123; &quot;price&quot;: 40 &#125; &#125; ] &#125; &#125;&#125;GET /lib4/items/_search&#123; &quot;query&quot;: &#123; &quot;bool&quot;: &#123; &quot;should&quot;:[ &#123; &quot;term&quot;:&#123; &quot;itemID&quot;: &quot;id100123&quot; &#125; &#125;, &#123; &quot;bool&quot;:&#123; &quot;must&quot;: [ &#123; &quot;term&quot;: &#123; &quot;price&quot;: 55 &#125; &#125; ] &#125; &#125; ], &quot;must_not&quot;: [ &#123; &quot;term&quot;: &#123; &quot;price&quot;: 40 &#125; &#125; ] &#125; &#125;&#125;#range gt/lt/gte/lte范围GET /lib4/items/_search&#123; &quot;query&quot;: &#123; &quot;bool&quot;: &#123; &quot;filter&quot;: &#123; &quot;range&quot;: &#123; &quot;price&quot;: &#123; &quot;gte&quot;: 10, &quot;lte&quot;: 55 &#125; &#125; &#125; &#125; &#125;&#125;#exists非空GET /lib4/items/_search&#123; &quot;query&quot;: &#123; &quot;bool&quot;: &#123; &quot;filter&quot;: &#123; &quot;exists&quot;:&#123; &quot;field&quot;: &quot;price&quot; &#125; &#125; &#125; &#125;&#125;#聚合查询GET /lib4/items/_search&#123; &quot;size&quot;: 0, &quot;aggs&quot;: &#123; &quot;price_of_sum&quot;: &#123; &quot;sum&quot;: &#123; &quot;field&quot;: &quot;price&quot; &#125; &#125; &#125;&#125;GET /lib4/items/_search&#123; &quot;size&quot;: 0, &quot;aggs&quot;: &#123; &quot;price_of_min&quot;: &#123; &quot;min&quot;: &#123; &quot;field&quot;: &quot;price&quot; &#125; &#125; &#125;&#125;GET /lib4/items/_search&#123; &quot;size&quot;: 0, &quot;aggs&quot;: &#123; &quot;price_of_max&quot;: &#123; &quot;max&quot;: &#123; &quot;field&quot;: &quot;price&quot; &#125; &#125; &#125;&#125;GET /lib4/items/_search&#123; &quot;size&quot;: 0, &quot;aggs&quot;: &#123; &quot;price_of_avg&quot;: &#123; &quot;avg&quot;: &#123; &quot;field&quot;: &quot;price&quot; &#125; &#125; &#125;&#125;#求基数cardinalityGET /lib4/items/_search&#123; &quot;size&quot;: 0, &quot;aggs&quot;: &#123; &quot;price_of_cardi&quot;: &#123; &quot;cardinality&quot;: &#123; &quot;field&quot;: &quot;price&quot; &#125; &#125; &#125;&#125;#分组GET /lib4/items/_search&#123; &quot;size&quot;: 0, &quot;aggs&quot;: &#123; &quot;price_of_group&quot;: &#123; &quot;terms&quot;: &#123; &quot;field&quot;: &quot;price&quot; &#125; &#125; &#125;&#125;#对有lanqiu兴趣的按年龄分组GET /lib3/user/_search&#123; &quot;size&quot;: 0, &quot;query&quot;: &#123; &quot;match&quot;: &#123; &quot;interests&quot;: &quot;lanqiu&quot; &#125; &#125;, &quot;aggs&quot;: &#123; &quot;age_of_group&quot;: &#123; &quot;terms&quot;: &#123; &quot;field&quot;: &quot;age&quot;, &quot;order&quot;: &#123; &quot;age_of_avg&quot;: &quot;desc&quot; &#125; &#125;, &quot;aggs&quot;: &#123; &quot;age_of_avg&quot;: &#123; &quot;avg&quot;: &#123; &quot;field&quot;: &quot;age&quot; &#125; &#125; &#125; &#125; &#125;&#125;#复合查询GET /lib3/user/_search&#123; &quot;query&quot;: &#123; &quot;bool&quot;: &#123; &quot;must&quot;: [ &#123; &quot;match&quot;:&#123; &quot;interests&quot;: &quot;lanqiu&quot; &#125; &#125;, &#123; &quot;range&quot;: &#123; &quot;birthday&quot;: &#123; &quot;gte&quot;: &quot;2010-01-01&quot; &#125; &#125; &#125; ], &quot;must_not&quot;: [ &#123; &quot;match&quot;: &#123; &quot;interests&quot;: &quot;youyong&quot; &#125; &#125; ], &quot;should&quot;: [ &#123; &quot;match&quot;: &#123; &quot;address&quot;: &quot;sichuan,chengdu&quot; &#125; &#125; ] &#125; &#125;&#125;#constant_score指定默认匹配分值GET /lib3/user/_search&#123; &quot;size&quot;: 10, &quot;query&quot;: &#123; &quot;constant_score&quot;: &#123; &quot;filter&quot;: &#123; &quot;term&quot;: &#123; &quot;interests&quot;: &quot;youyong&quot; &#125; &#125; &#125; &#125;&#125;]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>es</tag>
        <tag>elasticsearch</tag>
        <tag>kibana</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World!]]></title>
    <url>%2F2018%2F08%2F19%2Fpace2car%2F</url>
    <content type="text"><![CDATA[首先是一个俗套的打招呼方式，hello world！我开始写博客啦！ 这是我的第一篇个人博客，本着交流技术和提高自己的心态，想通过此博客与大家分享学习和成长路程中的心得和曾经踩过的坑，以及程序上小问题。 在两天时间的不懈努力下，跨越各种艰难险阻，各种小坑，终于成功搭建起了自己的博客，一路上感谢各位前人大牛提供的博客援助，这也更加坚定了我写博客的决心和目的——分享经验，给后来人留下一点微不足道的提示和建议。 作者的技术水平十分有限，希望有问题或建议都能够多与作者联系，共同成长！ e-mail: pace2car@163.comauthor: Pace2Car 转载请…算了，反正也不可能有人转载。]]></content>
      <categories>
        <category>杂记</category>
      </categories>
      <tags>
        <tag>起步</tag>
        <tag>HelloWorld!</tag>
      </tags>
  </entry>
</search>
